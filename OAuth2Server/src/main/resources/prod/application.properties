server.port=9999
server.context-path=/security

# --- MySQL数据存储配置 ---
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/openfire?prepStmtCacheSize=517&cachePrepStmts=true&autoReconnect=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# --- MongoDB数据存储配置 ---
#spring.data.mongodb.host=117.121.26.152
#spring.data.mongodb.port=27017
#spring.data.mongodb.username=test
#spring.data.mongodb.password=test@pwd123
#spring.data.mongodb.database=test
#spring.data.mongodb.repositories.enabled=true

spring.data.mongodb.host=172.16.200.241
spring.data.mongodb.port=27017
spring.data.mongodb.database=test
spring.data.mongodb.repositories.enabled=true


# --- Redis缓存集群配置 ---
#spring.redis.cluster.nodes=192.168.12.227:7001,192.168.12.227:7002,192.168.12.227:7003,192.168.12.227:7004,192.168.12.227:7005,192.168.12.227:7006
#spring.redis.cluster.max-redirects=3

# --- Redis缓存单机配置 ---
spring.redis.host=172.16.200.241
#spring.redis.host=127.0.0.1

spring.redis.password=123456
#spring.redis.password=2jhwey2zs@3ss
spring.redis.port=6379

# --- JPA相关配置 ---
#create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect